@use "norm";

// colors
:root {
  --txt-c: #000000;
  --txt-c-s: #757575;
  --bgc: #e5f6ff;
  --red-c: #f52222;
  --status-b-c: #00839f;
  --status-g-c: #008a27;
  --btn-light-g-c: #e5ffeb;
  --btn-light-y-c: #fbffe5;
  --btn-g-c: #00df74;
  --btn-r-c: #df0000;
}

// font
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800&display=swap");

body {
  font-family: "Poppins", sans-serif;
  background-color: var(--bgc);
}

// Globals
*,
*::before,
*::after {
  box-sizing: border-box;
}

h1,
h2,
h2,
h4,
h5,
h6,
p {
  margin-top: 0;
  margin-bottom: 0;
}

ul {
  padding: 0;
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;

  &:active,
  &:visited {
    text-decoration: none;
    color: inherit;
  }
}

input,
button {
  border: none;
  outline: none;
  background-color: transparent;
  color: inherit;
}

// container classes
@mixin min($bp, $max: "null", $device: "screen") {
  @if $max == "null" {
    @media only #{$device} and (min-width: #{$bp}) {
      @content;
    }
  } @else {
    @media only #{$device} and (min-width: #{$bp}) and (max-width: #{$max}) {
      @content;
    }
  }
}

@function bp($bp) {
  @return map-get($breakpoints, $bp);
}

$breakpoints: (
  na: 0px,
  // For BS grid
  xs: 320px,
  // Smartphone
  sm: 600px,
  // Tablets
  md: 900px,
  // Tablets Landscape and small desktops
  lg: 1200px,
  // Desktops
  xl: 1800px,
  // Large Desktop
);

@function container($container-size, $true-val: false) {
  @return map-get($container-sizes, $container-size);
}

$container-sizes: (
  sm: map-get($breakpoints, sm) - 30px,
  md: map-get($breakpoints, md) - 40px,
  lg: map-get($breakpoints, lg) - 50px,
  xl: map-get($breakpoints, xl) - 400px,
);

.container {
  padding-right: 1rem;
  padding-left: 1rem;

  &:not(.is-fluid) {
    margin: 0 auto;

    @each $bp, $container-size in $container-sizes {
      @include min(#{bp(#{$bp})}) {
        width: 100%;
        max-width: container(#{$bp});
      }
    }
  }
}

@each $bp, $container-size in $container-sizes {
  .container-#{$bp} {
    margin: 0 auto;
    padding-right: 1rem;
    padding-left: 1rem;
    width: 100%;

    $i: index($container-sizes, $bp $container-size);

    @for $j from $i through length($container-sizes) {
      @include min(#{bp(nth(nth($container-sizes, $j), 1))}) {
        max-width: container(#{nth(nth($container-sizes, $j), 1)});
      }
    }
  }
}

// layout

.app {
  display: grid;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
}

// header

.header {
  $pad: 30px;
  padding-top: $pad;
  padding-bottom: $pad;
  background-color: #fff;

  h1 {
    font-weight: 600;
    font-size: 20px;
  }
}

// btns
.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  font-weight: 500;
  cursor: pointer;
  padding: 12px 30px;
  &--add {
    background-color: #fff;
    color: #000;
  }
  &--green {
    background-color: var(--btn-light-g-c);
    font-size: 10px;
    font-weight: 700;
  }
  &--yellow {
    background-color: var(--btn-light-y-c);
    font-size: 10px;
    font-weight: 700;
  }
  &--delete {
    fill: var(--btn-r-c);
  }
  &--add-book {
    min-width: 200px;
    background-color: var(--btn-g-c);
  }
  &--cancel {
    min-width: 200px;
    background-color: var(--btn-r-c);
  }
}

// main
.btn-wrapper {
  display: flex;
  justify-content: center;
  padding: 30px;
}

.books-wrapper {
  h2 {
    font-size: 20px;
    font-weight: 600;
    margin-bottom: 30px;
  }
}
.books-grid {
  display: grid;
  gap: 20px;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  justify-items: center;
}

// book card
.book {
  background-color: #fff;
  padding: 10px;
  display: grid;
  gap: 10px;
  width: 100%;

  h3 {
    margin: 0;
    font-size: 16px;
    font-weight: 600;
    width: 70%;
    line-height: 24px;
  }
  .author {
    font-size: 12px;
    font-weight: 500;
    color: var(--txt-c-s);
  }
  .page {
    font-size: 10px;
    font-weight: 700;
    color: var(--txt-c-s);
  }
  .status {
    font-size: 10px;
    font-weight: 700;
    color: var(--txt-c-s);
    &--reading {
      color: var(--status-g-c);
    }
    &--read {
      color: var(--status-b-c);
    }
  }
  .btn {
    justify-self: center;
    &:last-child {
      justify-self: end;
    }
  }
}

// footer
.footer {
  padding: 30px;
  text-align: center;
  font-size: 12px;
  a {
    color: #00839f;
    font-weight: 700;
  }
}
// overlay
.overlay {
  visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.35);
  display: grid;
  place-items: center;
}
.add-book-box {
  background-color: #fff;
  padding: 30px;
  min-width: 60vw;

  h3 {
    font-size: 24px;
    font-weight: 700;
    text-align: center;
  }
  ul {
    max-width: 40vw;
    margin: 0 auto;
    @media screen and (max-width: 768px) {
      max-width: none;
    }
  }
  li {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 20px;

    label {
      font-size: 20px;
      font-weight: 500;
    }
    [type="text"],
    [type="tel"] {
      background-color: var(--bgc);
      padding: 15px;
      width: 100%;
    }
  }
  .input--check {
    display: flex;
    gap: 10px;
    align-items: center;
    justify-content: start;
    flex-direction: row;
  }
  .controls {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 40px;
    gap: 30px;
    flex-wrap: wrap;
  }
}

.show {
  visibility: visible;
}